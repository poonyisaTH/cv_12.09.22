import pandas as pd
import streamlit as st
from pandas import DataFrame
import google_auth_httplib2
import httplib2

from google.oauth2 import service_account
from googleapiclient.discovery import build
from googleapiclient.http import HttpRequest

SCOPE = "https://www.googleapis.com/auth/spreadsheets"
SPREADSHEET_ID = "1DZUnRl0vcmpP5rC4eUwIQy-CM1BQ2XYK6Sy_4vsLpRU"
SHEET_NAME = "Sheet1"
GSHEET_URL = f"https://docs.google.com/spreadsheets/d/{SPREADSHEET_ID}"
from gsheetsdb import connect

# Create a connection object.
conn = connect()

# Perform SQL query on the Google Sheet.
# Uses st.cache to only rerun when the query changes or after 10 min.
@st.cache(ttl=600)
def run_query(query):
    rows = conn.execute(query, headers=1)
    rows = rows.fetchall()
    return rows

sheet_url = st.secrets["private_gsheets_url"]
rows = run_query(f'SELECT * FROM "{sheet_url}"')




@st.experimental_singleton()
def connect_to_gsheet():
    # Create a connection object.
    credentials = service_account.Credentials.from_service_account_info(
        st.secrets["gcp_service_account"],
        scopes=[SCOPE],
    )

    # Create a new Http() object for every request
    def build_request(http, *args, **kwargs):
        new_http = google_auth_httplib2.AuthorizedHttp(
            credentials, http=httplib2.Http()
        )
        return HttpRequest(new_http, *args, **kwargs)

    authorized_http = google_auth_httplib2.AuthorizedHttp(
        credentials, http=httplib2.Http()
    )
    service = build(
        "sheets",
        "v4",
        requestBuilder=build_request,
        http=authorized_http,
    )
    gsheet_connector = service.spreadsheets()
    return gsheet_connector


def get_data(gsheet_connector) -> pd.DataFrame:
    values = (
        gsheet_connector.values()
        .get(
            spreadsheetId=SPREADSHEET_ID,
            range=f"{SHEET_NAME}!A:N",
        )
        .execute()
    )

    df = pd.DataFrame(values["values"])
    df.columns = df.iloc[0]
    df = df[1:]
    return df


def add_row_to_gsheet(gsheet_connector, row) -> None:
    gsheet_connector.values().append(
        spreadsheetId=SPREADSHEET_ID,
        range=f"{SHEET_NAME}!A:N",
        body=dict(values=row),
        valueInputOption="USER_ENTERED",
    ).execute()

gsheet_connector = connect_to_gsheet()

#detail  
form = st.form(key="annotation")

def clear_form():
    st.session_state["‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•"] = ""
    st.session_state["‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå"] = ""
    st.session_state["‡∏≠‡∏≤‡∏¢‡∏∏ (‡∏õ‡∏µ)"] = ""
with form:
   
    st.title('‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏¥‡∏î‡πÇ‡∏£‡∏Ñ‡∏´‡∏±‡∏ß‡πÉ‡∏à')
    st.subheader('‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏≤‡∏†‡∏¥‡πÄ‡∏©‡∏Å')

   
    title = st.text_input('‚úçÔ∏è‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•',key='‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•')
    gender = st.radio('‡πÄ‡∏û‡∏®',('‡∏ä‡∏≤‡∏¢','‡∏´‡∏ç‡∏¥‡∏á'))
    telephone = st.text_input('‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå',key='‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå')
    current_address = st.selectbox('‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô',('‡πÉ‡∏ô‡πÄ‡∏Ç‡∏ï‡∏°‡∏´‡∏≤‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏¥‡πå','‡∏ô‡∏≠‡∏Å‡πÄ‡∏Ç‡∏ï'))
    age = st.number_input('‡∏≠‡∏≤‡∏¢‡∏∏ (‡∏õ‡∏µ)',0,130)
    smoking = st.selectbox('‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ',('‡πÑ‡∏°‡πà‡∏™‡∏π‡∏ö','‡∏™‡∏π‡∏ö'))
    fbs = st.radio('‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô',('‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô','‡πÄ‡∏õ‡πá‡∏ô'))
    blood_pressure_up = st.number_input('‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï‡∏ï‡∏±‡∏ß‡∏ö‡∏ô(mmHg.)',0)
    blood_pressure_down = st.number_input('‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï‡∏ï‡∏±‡∏ß‡∏•‡πà‡∏≤‡∏á(mmHg.)',0)
    waist = st.number_input('‡∏£‡∏≠‡∏ö‡πÄ‡∏≠‡∏ß (‡∏ã‡∏°.)',0)
    submitted = st.form_submit_button(label="Submit")
    clear = st.form_submit_button(label="Clear", on_click=clear_form)

#show if have diabets
if(fbs=='‡πÄ‡∏õ‡πá‡∏ô'):
    cal_fbs=5
else:
    cal_fbs=0

#cal_age
if (age<=39):
    cal_age=-2
elif (age<=44):
    cal_age=0
elif (age<=49):
    cal_age=2
elif (age<=54):
    cal_age=4
elif (age<=59):
    cal_age=6
elif (age>=60):
    cal_age=8

#cal_BP
if(blood_pressure_up>=140)or(blood_pressure_down>=90):
    cal_BP=3
else:
    cal_BP=0

#cal_gender
if(gender=='‡∏ä‡∏≤‡∏¢'):
    cal_gender=3
else:
    cal_gender=0

#cal_smoking
if(smoking=='‡∏™‡∏π‡∏ö'):
    cal_smoking=2
else:
    cal_smoking=0

#cal_waist
if(gender=='‡∏ä‡∏≤‡∏¢')and(waist>=90):
    cal_waist=4
elif(gender=='‡∏´‡∏ç‡∏¥‡∏á')and(waist>=80):
    cal_waist=4
else:
    cal_waist=0


#Total_score
Total_score=int(cal_age+cal_BP+cal_gender+cal_smoking+cal_waist+cal_fbs)

#chance of diseases
if (Total_score<=0):
    chance=0
elif(Total_score<=5):
    chance=1
elif(Total_score<=8):
    chance=2
elif(Total_score<=9):
    chance=3
elif(Total_score<=11):
    chance=4
elif(Total_score<=12):
    chance=5
elif(Total_score<=13):
    chance=6
elif(Total_score<=14):
    chance=7
elif(Total_score<=15):
    chance=10
elif(Total_score>=16):
    chance=12

# percentage of diseases
if (chance == 0):
    p_diseases = '0 %'
elif(chance==1):
    p_diseases = '1 %'
elif(chance==2):
    p_diseases = '2 %'
elif(chance==3):
    p_diseases = '3 %'
elif(chance==4):
    p_diseases = '4 %'
elif(chance==5):
    p_diseases = '5 %'
elif(chance==7):
    p_diseases = '7 %'
elif(chance==8):
    p_diseases = '8 %'
elif(chance==10):
    p_diseases = '10 %'
elif(chance==12):
    p_diseases = '12 %'

#Group
if(chance<=1):
    Group='‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ô‡πâ‡∏≠‡∏¢'
elif(chance<=4):
    Group='‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á'
elif(chance<=8):
    Group='‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏π‡∏á'
elif(chance<=12):
    Group='‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏π‡∏á‡∏°‡∏≤‡∏Å'

#suggestion 
if(Group=='‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ô‡πâ‡∏≠‡∏¢'):
    suggestion='‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏î‡∏µ ‡∏Ñ‡∏ß‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠ ‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏õ‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏¥‡∏î‡πÇ‡∏£‡∏Ñ‡∏´‡∏•‡∏≠‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏´‡∏±‡∏ß‡πÉ‡∏à'
elif(Group=='‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á'):
    suggestion='‡∏Ñ‡∏ß‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠ ‡∏Ñ‡∏ß‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏£‡∏™‡∏´‡∏ß‡∏≤‡∏ô ‡∏°‡∏±‡∏ô ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡πá‡∏°‡∏à‡∏±‡∏î ‡∏á‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏£‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏û‡∏ó‡∏¢‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ'
elif(Group=='‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏π‡∏á'):
    suggestion='‡∏Ñ‡∏ß‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠ ‡∏Ñ‡∏ß‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏£‡∏™‡∏´‡∏ß‡∏≤‡∏ô ‡∏°‡∏±‡∏ô ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡πá‡∏°‡∏à‡∏±‡∏î ‡∏á‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏£‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏û‡∏ó‡∏¢‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡πá‡∏ß'
elif(Group=='‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏π‡∏á‡∏°‡∏≤‡∏Å'):
    suggestion='‡∏Ñ‡∏ß‡∏£‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏° ‡πÄ‡∏•‡∏¥‡∏Å‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà ‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢ ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏Ç‡πá‡∏°‡∏á‡∏ß‡∏î ‡∏•‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡πâ‡∏ß‡∏ô ‡πÅ‡∏•‡∏∞‡∏£‡∏µ‡∏ö‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏û‡∏ó‡∏¢‡πå ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ'



if submitted:
    add_row_to_gsheet(
        gsheet_connector,
        [[title,gender,telephone,current_address,age,smoking,fbs,blood_pressure_up,blood_pressure_down,waist,Total_score,p_diseases,Group,suggestion]],
    )
    st.write('‚úÖ ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì üëâ',Total_score)
    st.write('‚úÖ ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏¥‡∏î‡πÇ‡∏£‡∏Ñ‡πÄ‡∏™‡πâ‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏´‡∏±‡∏ß‡πÉ‡∏à ‡πÅ‡∏•‡∏∞‡∏´‡∏•‡∏≠‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ 10 ‡∏õ‡∏µ‡∏Ç‡∏≠‡∏á‡∏ó‡πà‡∏≤‡∏ô üëâ',p_diseases)
    st.write('‚úÖ ‡∏à‡∏±‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏° üëâ',Group)
    st.write('‚úÖ ‡∏Ç‡πâ‡∏≠‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô :',suggestion)

expander = st.expander("See all records")
with expander:
    st.write(f"Open original [Google Sheet]({GSHEET_URL})")
    st.dataframe(get_data(gsheet_connector))
